// –ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API

const API_URL = 'http://localhost:5000/api';

async function testAPI() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API...\n');

  // 1. Health check
  try {
    console.log('1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–µ—Ä–∞...');
    const health = await fetch(`${API_URL}/health`);
    const healthData = await health.json();
    console.log('‚úÖ –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç:', healthData);
  } catch (err) {
    console.error('‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç:', err.message);
    console.log('üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω: cd server && npm run dev');
    return;
  }

  // 2. –û—Ç–ø—Ä–∞–≤–∫–∞ SMS –∫–æ–¥–∞
  try {
    console.log('\n2. –û—Ç–ø—Ä–∞–≤–∫–∞ SMS –∫–æ–¥–∞...');
    const sendCode = await fetch(`${API_URL}/auth/send-code`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ phone: '79991234567' }),
    });
    const codeData = await sendCode.json();
    console.log('‚úÖ –ö–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω:', codeData);
    
    if (codeData.success) {
      console.log(`üì± –ù–æ–º–µ—Ä: ${codeData.phone}`);
      console.log('üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–¥–∞!');
    }
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–¥–∞:', err.message);
  }
}

testAPI();

